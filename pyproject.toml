[project]
name = "saferplaces-agent"
version = "0.0.9"
description = "Starter template for making a new agent LangGraph."
authors = [
    { name = "Tommaso Redaelli", email = "tommaso.redaelli@gecosistema.com" },
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.9"
dependencies = [
    "openai",
    "langgraph>=0.2.6",
    "langchain-anthropic",
    "langchain-openai",
    "langgraph-cli[inmem]",
    
    "python-dotenv>=1.0.1",
    "python-dateutil",

    "boto3",

    "geopandas",
    "rasterio",
    "xarray",
    "rioxarray"
]


[project.optional-dependencies]
dev = [
    "mypy>=1.11.1",
    "ruff>=0.6.1"
]
leafmap = [
    "leafmap",
    "localtileserver",
    "fiona",
    "jupyter-server-proxy",
    "titiler[full]",
    "titiler.application",
    "uvicorn"
]

[build-system]
requires = ["setuptools>=73.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}
[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.ruff]
lint.select = [
    "E",    # pycodestyle
    "F",    # pyflakes
    "I",    # isort
    "D",    # pydocstyle
    "D401", # First line should be in imperative mood
    "T201",
    "UP",
]
lint.ignore = [
    "UP006",
    "UP007",
    # We actually do want to import from typing_extensions
    "UP035",
    # Relax the convention by _not_ requiring documentation for every function parameter.
    "D417",
    "E501",
]
[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "UP"]
[tool.ruff.lint.pydocstyle]
convention = "google"
